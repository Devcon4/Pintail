// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pintail.Infrastructure;

#nullable disable

namespace Pintail.Infrastructure.Migrations
{
    [DbContext(typeof(PintailDbContext))]
    [Migration("20231026215047_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("Pintail.Domain.Aggregates.BoardAggregate.Board", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortGuid")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("short_guid");

                    b.HasKey("Id");

                    b.ToTable("Board");
                });

            modelBuilder.Entity("Pintail.Domain.Aggregates.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BoardId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("body");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.ToTable("Card");
                });

            modelBuilder.Entity("Pintail.Domain.Aggregates.Label", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BoardId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("body");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.ToTable("Label");
                });

            modelBuilder.Entity("Pintail.Domain.Aggregates.Card", b =>
                {
                    b.HasOne("Pintail.Domain.Aggregates.BoardAggregate.Board", "Board")
                        .WithMany("Cards")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Pintail.Domain.ValueObjects.Position", "Position", b1 =>
                        {
                            b1.Property<Guid>("CardId")
                                .HasColumnType("TEXT");

                            b1.Property<float>("X")
                                .HasColumnType("REAL")
                                .HasColumnName("position_x");

                            b1.Property<float>("Y")
                                .HasColumnType("REAL")
                                .HasColumnName("position_y");

                            b1.HasKey("CardId");

                            b1.ToTable("Card");

                            b1.WithOwner()
                                .HasForeignKey("CardId");
                        });

                    b.Navigation("Board");

                    b.Navigation("Position")
                        .IsRequired();
                });

            modelBuilder.Entity("Pintail.Domain.Aggregates.Label", b =>
                {
                    b.HasOne("Pintail.Domain.Aggregates.BoardAggregate.Board", "Board")
                        .WithMany("Labels")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Pintail.Domain.ValueObjects.Position", "Position", b1 =>
                        {
                            b1.Property<Guid>("LabelId")
                                .HasColumnType("TEXT");

                            b1.Property<float>("X")
                                .HasColumnType("REAL")
                                .HasColumnName("position_x");

                            b1.Property<float>("Y")
                                .HasColumnType("REAL")
                                .HasColumnName("position_y");

                            b1.HasKey("LabelId");

                            b1.ToTable("Label");

                            b1.WithOwner()
                                .HasForeignKey("LabelId");
                        });

                    b.Navigation("Board");

                    b.Navigation("Position")
                        .IsRequired();
                });

            modelBuilder.Entity("Pintail.Domain.Aggregates.BoardAggregate.Board", b =>
                {
                    b.Navigation("Cards");

                    b.Navigation("Labels");
                });
#pragma warning restore 612, 618
        }
    }
}
